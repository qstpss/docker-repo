version: '3.3'
services:
  mysqldb:
    #container_name: database
    image: mysql
    ports:
    - '3308:3306'
    environment: # could be hidden with docker secrets
      - MYSQL_USER=dbserviceUser
      - MYSQL_PASSWORD=dbservicePassword
      - MYSQL_ROOT_PASSWORD=password
      - MYSQL_DATABASE=extvaldb
    volumes:
      - '/home/mikhail/Documents/docker-compose/dbservice/initDatabase.sql:/docker-entrypoint-initdb.d/1.sql'
      - mysql-data:/home/mysql-data-volume/data # lives until docker-compose down -v
    networks:
      - db_network
  dbservice:
    #container_name: database_client
    build:
      context: ./dbservice
      dockerfile: /home/mikhail/Documents/docker-compose/dbservice/Dockerfile
    image: localhost/dbservice
    depends_on:
      - mysqldb
    ports:
    - '9091:8081'
    networks:
      - db_network
      - fdt_network
  fdtservice:
    #container_name: format_date_time
    build:
      context: ./formatdatetimeservice
      dockerfile: /home/mikhail/Documents/docker-compose/formatdatetimeservice/Dockerfile
    image: localhost/fdtservice
    ports:
    - '9093:8083'
    networks:
      - fdt_network
      - gdt_network
  gdtservice:
    #container_name: generate_date_time
    build:
      context: ./datetimegenerator
      dockerfile: /home/mikhail/Documents/docker-compose/datetimegenerator/Dockerfile
    image: localhost/gdtservice
    ports:
    - '9094:8084'
    networks:
      - gdt_network
  adminservice:
    #container_name: generate_date_time
    build:
      context: ./adminservice
      dockerfile: /home/mikhail/Documents/docker-compose/adminservice/Dockerfile
    image: localhost/adminservice
    ports:
    - '9096:8086'
    networks:
      - gdt_network
    depends_on:
      - gdtservice
  kafkaservice:
    build:
      context: ./kafkaservice
      dockerfile: /home/mikhail/Documents/docker-compose/kafkaservice/Dockerfile
    image: localhost/kafkaservice
    ports:
      - '9095:8085'
    networks:
      - kafka_service_network
      - db_network
    depends_on:
      - kafka
  zookeeper:
    image: wurstmeister/zookeeper
    ports:
      - '2500:2181'
    networks:
      - kafka_zookeeper_network
    volumes:
      - ./zoo/data:/var/lib/zookeeper/data
      - ./zoo/log:/var/lib/zookeeper/log
  kafka:
    image: wurstmeister/kafka
    ports:
      - '2501:9092'
    environment:
      - KAFKA_LISTENERS=PLAINTEXT://:9092
      #- KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://127.0.0.1:9092
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CREATE_TOPICS=date-time-topic:1:1
    depends_on:
      - zookeeper
    networks:
      - kafka_zookeeper_network
      - fdt_network
      - kafka_service_network
    volumes:
      - ./broker/data:/var/lib/kafka/data
volumes:
  mysql-data:
networks:
  db_network: {}
  fdt_network: {}
  gdt_network: {}
  kafka_zookeeper_network: {}
  kafka_service_network: {}
